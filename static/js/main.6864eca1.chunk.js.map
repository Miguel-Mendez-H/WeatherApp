{"version":3,"sources":["gallery/icons/temp.png","gallery/icons/wind.png","gallery/icons/humidity.png","App.js","constants/index.js","reportWebVitals.js","index.js"],"names":["dataRow","icon","descrip","val","mu","className","kelvinToCentigrade","kelvin","date","Date","toLocaleDateString","year","month","day","App","useState","data","setData","getData","a","fetch","headers","Authorization","then","res","json","useEffect","console","log","weatherEstate","weather","main","name","temp","alt","src","icontemp","iconhum","humidity","iconwind","wind","speed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,G,MAAA,IAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,qC,OCSnCA,EAAU,SAACC,EAAMC,EAASC,GAAkB,IAAbC,EAAY,uDAAP,GACxC,OACE,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACGJ,EAAMC,KAERC,EAAKC,MAKNE,EAAqB,SAACC,GAAD,OAAYA,EAAS,QAC1CC,GAAO,IAAIC,MAAOC,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAwD5EC,MAtDf,WAAgB,IAAD,EAEWC,qBAFX,mBAENC,EAFM,KAEAC,EAFA,KAIPC,EAAO,uCAAG,sBAAAC,EAAA,sDACdC,MC5Be,4CD4BJ,CACTC,QAAS,CACPC,cC7BwB,iKD+BzBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAP,GAAI,OAAIC,EAAQD,MANV,2CAAH,qDASbU,qBAAU,WACHV,GACHE,MAED,CAACF,IACJW,QAAQC,IAAIZ,GAEZ,IAAIa,EAAa,OAAGb,QAAH,IAAGA,OAAH,EAAGA,EAAMc,QAAQ,GAAGC,KAGrC,OAFMF,EAAc,YAAWA,EAAgB,WAG7C,sBAAKxB,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,OAAf,UACO,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,OAAQ,YAEjB,qBAAK3B,UAAU,OAAf,SACGG,IAEH,sBAAKH,UAAU,OAAf,UACKC,EAAkB,OAACU,QAAD,IAACA,OAAD,EAACA,EAAMe,KAAKE,MADnC,UAGA,sBAAK5B,UAAU,eAAf,qBACawB,QAKf,sBAAKxB,UAAU,YAAf,UAEGL,EAAQ,qBAAKkC,IAAI,QAAQC,IAAKC,EAAU/B,UAAU,SAAW,cAAeC,EAAkB,OAACU,QAAD,IAACA,OAAD,EAACA,EAAMe,KAAKE,MAAO,SACjHjC,EAAQ,qBAAKkC,IAAI,QAAQC,IAAKE,EAAShC,UAAU,SAAW,UAArD,OAAiEW,QAAjE,IAAiEA,OAAjE,EAAiEA,EAAMe,KAAKO,SAAW,MAC9FtC,EAAQ,qBAAKkC,IAAI,QAAQC,IAAKI,EAAUlC,UAAU,SAAW,mBAAtD,OAA2EW,QAA3E,IAA2EA,OAA3E,EAA2EA,EAAMwB,KAAKC,MAAQ,eExD/FC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6864eca1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/temp.dc3d2ab7.png\";","export default __webpack_public_path__ + \"static/media/wind.0c7eb14c.png\";","export default __webpack_public_path__ + \"static/media/humidity.d2bfcf86.png\";","import { authorizationKey, URL } from \"./constants\"\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport icontemp from \"./gallery/icons/temp.png\";\nimport iconwind from \"./gallery/icons/wind.png\";\nimport iconhum from \"./gallery/icons/humidity.png\"\n\n\n\nconst dataRow = (icon, descrip, val, mu = \"\") => {\n  return (\n    <div className=\"dataInfo\">\n      <div className=\"data\">\n        {icon}{descrip}\n      </div>\n      {val}{mu}\n    </div>\n  )\n}\n\nconst kelvinToCentigrade = (kelvin) => kelvin - 273.15\nconst date = new Date().toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })\n\nfunction App() {\n\n  const [data, setData] = useState()\n\n  const getData = async () => {\n    fetch(URL, {\n      headers: {\n        Authorization: authorizationKey\n      }\n    }).then(res => res.json())\n      .then(data => setData(data))\n  }\n\n  useEffect(() => {\n    if (!data) {\n      getData()\n    }\n  }, [data])\n  console.log(data)\n\n  var weatherEstate = data?.weather[0].main\n    if (weatherEstate=\"Clouds\"){ weatherEstate = \"Nublado\"}\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <div className=\"city\">\n          {data?.name || \"No City\"}\n        </div>\n        <div className=\"date\">\n          {date}\n        </div>\n        <div className=\"temp\">\n            {kelvinToCentigrade(data?.main.temp)}°\n        </div>\n        <div className=\"Text-Weather\">\n            Clima / {weatherEstate} \n        </div>\n      </div>\n\n\n      <div className=\"frameInfo\">\n\n        {dataRow(<img alt=\"icono\" src={icontemp} className=\"icon\" />, \"Temperatura\", kelvinToCentigrade(data?.main.temp), \" °\")}\n        {dataRow(<img alt=\"icono\" src={iconhum} className=\"icon\" />, \"Humedad\", (data?.main.humidity), \" %\")}\n        {dataRow(<img alt=\"icono\" src={iconwind} className=\"icon\" />, \"Velocidad Viento\", (data?.wind.speed), \" m/s\")}\n\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","export const URL = \"https://weatherapph.herokuapp.com/weather\";\r\nexport const authorizationKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}